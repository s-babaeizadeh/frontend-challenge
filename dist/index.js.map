{"version":3,"sources":["index.js"],"names":["CreateAccountViewModel","self","this","firstName","ko","observable","extend","required","minLength","emailAddress","email","subscriptionType","hasBeenStarted","hasBeenContinued","hasBeenSubmitted","handleContinue","errors","validation","group","length","showAllMessages","handleSubmit","knockoutApp","document","querySelector","applyBindings"],"mappings":"AAAA,SAASA,yBACN,IAAIC,EAAOC,KAEXD,EAAKE,UAAYC,GAAGC,WAAW,IAAIC,OAAO,CACvCC,UAAU,EACVC,UAAW,IAGdP,EAAKQ,aAAeL,GAAGC,WAAW,IAAIC,OAAO,CAC1CC,UAAU,EACVG,OAAO,IAGVT,EAAKU,iBAAmBP,GAAGC,WAAW,YACtCJ,EAAKW,eAAiBR,GAAGC,YAAW,GACpCJ,EAAKY,iBAAmBT,GAAGC,YAAW,GACtCJ,EAAKa,iBAAmBV,GAAGC,YAAW,GAEtCJ,EAAKc,eAAiB,WAEnB,IAAIC,EAASZ,GAAGa,WAAWC,MAAMjB,GAC7Be,IAASG,OAAS,EACnBH,EAAOI,mBAIVnB,EAAKW,gBAAe,GACpBX,EAAKY,kBAAiB,GACtBZ,EAAKa,kBAAiB,KAGzBb,EAAKoB,aAAe,WAEjB,IAAIL,EAASZ,GAAGa,WAAWC,MAAMjB,GAC7Be,IAASG,OAAS,EACnBH,EAAOI,mBAIVnB,EAAKW,gBAAe,GACpBX,EAAKY,kBAAiB,GACtBZ,EAAKa,kBAAiB,KAI3B,MAAMQ,YAAcC,SAASC,cAAc,iBAC3CpB,GAAGqB,cAAc,IAAIzB,uBAA0BsB","file":"index.js","sourcesContent":["function CreateAccountViewModel() {\r\n   var self = this;\r\n\r\n   self.firstName = ko.observable(\"\").extend({\r\n      required: true,\r\n      minLength: 2,      \r\n   });\r\n\r\n   self.emailAddress = ko.observable(\"\").extend({\r\n      required: true,\r\n      email: true\r\n   });\r\n\r\n   self.subscriptionType = ko.observable(\"standard\");\r\n   self.hasBeenStarted = ko.observable(true);\r\n   self.hasBeenContinued = ko.observable(false);\r\n   self.hasBeenSubmitted = ko.observable(false);\r\n   \r\n   self.handleContinue = function() {\r\n      //Check for errors      \r\n      var errors = ko.validation.group(self);\r\n      if (errors().length > 0) {\r\n         errors.showAllMessages();\r\n         return;\r\n      }\r\n      \r\n      self.hasBeenStarted(false);\r\n      self.hasBeenContinued(true);\r\n      self.hasBeenSubmitted(false);\r\n    }\r\n\r\n   self.handleSubmit = function() {\r\n      //Check for errors      \r\n      var errors = ko.validation.group(self);\r\n      if (errors().length > 0) {\r\n         errors.showAllMessages();\r\n         return;\r\n      }\r\n\r\n      self.hasBeenStarted(false);\r\n      self.hasBeenContinued(false);\r\n      self.hasBeenSubmitted(true);\r\n    }    \r\n };\r\n \r\n const knockoutApp = document.querySelector(\"#knockout-app\");\r\n ko.applyBindings(new CreateAccountViewModel(), knockoutApp);"]}